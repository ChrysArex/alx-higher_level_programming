""" doctest for matrix divider """
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]
>>> try:
...     print(matrix_divided([], 3))
... except TypeError as e:
...     print(e)
... 
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     print(matrix_divided([[]], 3))
... except TypeError as e:
...     print(e)
... 
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     print(matrix_divided("l", 3))
... except TypeError as e:
...     print(e)
... 
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     print(matrix_divided({}, 3))
... except TypeError as e:
...     print(e)
... 
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     print(matrix_divided(3, 3))
... except TypeError as e:
...     print(e)
... 
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     print(matrix_divided(3.3655, 3))
... except TypeError as e:
...     print(e)
... 
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     print(matrix_divided([()], 3))
... except TypeError as e:
...     print(e)
... 
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     print(matrix_divided([2, 5], 3))
... except TypeError as e:
...     print(e)
... 
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     print(matrix_divided([{}, "dd"], 3))
... except TypeError as e:
...     print(e)
... 
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     print(matrix_divided([[1, 5]], 3.5))
... except TypeError as e:
...     print(e)
... 
[[0.29, 1.43]]
>>> try:
...     print(matrix_divided([[1, 5]], []))
... except TypeError as e:
...     print(e)
... 
div must be a number
>>> try:
...     print(matrix_divided([[1, 5]], "b"))
... except TypeError as e:
...     print(e)
... 
div must be a number
>>> try:
...     print(matrix_divided([[1, 5]], 0))
... except ZeroDivisionError as e:
...     print(e)
... 
division by zero
>>> try:
...     print(matrix_divided([[1, 5], [3.5, 5, 9]], 2))
... except TypeError as e:
...     print(e)
... 
Each row of the matrix must have the same size
>>> try:
...     print(matrix_divided([[1, 5], [3, 8]], 2))
... except TypeError as e:
...     print(e)
... 
[[0.5, 2.5], [1.5, 4.0]]


